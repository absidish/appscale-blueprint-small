--- 
- gather_facts: false
  hosts: all
  remote_user: root
  vars:
    admin_email: a@a.com
    admin_password: qweasd
    domain: liquuid.me
    master_ip: 10.0.2.15
    compute_ip: 10.0.2.15
    database_ip: 10.0.2.15
    zookeeper_ip: 10.0.2.15
  tasks: 

  - name: Installing git
    become: true
    apt:
      name: git
      update_cache: yes

  - name: Installing psmisc
    become: true
    apt:
      name: psmisc
      update_cache: yes

  - name: Installing locales
    become: true
    apt:
      name: locales
      update_cache: yes

  - name: Installing expect
    become: true
    apt:
      name: expect
      update_cache: yes

  - name: Cloning appscale
    become: true
    git:
      repo: git://github.com/AppScale/appscale.git
      dest: /root/appscale
      force: yes

  - name: Cloning appscale-tools
    become: true
    git:
      repo: git://github.com/AppScale/appscale-tools.git
      dest: /root/appscale-tools
      force: yes

  - name: Get bootstrap.sh
    become: true
    get_url:
      url: https://bootstrap.appscale.com
      dest: /root/bootstrap.sh

  - name: Update appscale_build env
    become: true
    shell: "sed 's/^export IN_DOCKER=\"no\"/export IN_DOCKER=\"yes\"/g' -i /root/appscale/debian/appscale_build.sh"

  - name: Generating locale
    become: true
    shell: locale-gen "en_US.UTF-8"

  - name: Installing appscale from source
    become: true
    shell: bash bootstrap.sh
    args:
      chdir: /root

  - name: Creating link to appscale
    become: true
    file:
      src: "/root/{{ item.path }}"
      dest: "/var/lib/{{ item.dest }}"
      state: link
    with_items:
      - { path: "appscale", dest: "appscale" }
      - { path: "appscale-tools", dest: "appscale-tools" }

  - name: Copying scripts
    become: true
    template:
      src: "scripts/{{ item }}"
      dest: "/var/lib/appscale/{{ item }}"
      mode: 0755
    with_items:
      - appscale-up.sh
      - create-appscalefile.sh
      - fix-domain.sh
      - setup.sh

  - name: nginx config
    become: true
    template:
      src: "templates/{{ item }}"
      dest: "/var/lib/appscale/{{ item }}"
      mode: 0644
    with_items:
      - nginx-default

  - name: Creating AppScalefile
    become: true
    shell: "appscale/create-appscalefile.sh -master {{ master_ip }} -appengine {{ compute_ip }} -database {{ database_ip }} -zookeeper {{ zookeeper_ip }}"
    args:
      chdir: /root

  - name: Generating ssh key
    become: true
    shell: "ssh-keygen -t rsa -N \"\" -f .ssh/as.key"
    args:
      chdir: /root

  - name: Authorizing key
    become: true
    shell: "cat .ssh/as.key.pub >> .ssh/authorized_keys"
    args:
      chdir: /root

  - name: Setup AppScale
    become: true
    shell: "appscale/setup.sh {{ domain }} {{ admin_email }} {{ admin_password }}"
    args:
      chdir: /root

